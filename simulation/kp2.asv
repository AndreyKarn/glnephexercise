clc
clear
%% Точный алгоритм пересчёта координат и составляющих вектора скорости центра масс НКА на заданный момент времени шкалы МВД
%% Эфемериды НКА 21 системы ГЛОНАСС в системе ПЗ-90.11
%% Дата 2020/02/26 13:45:18
%Расчёт времени формата ГЛОНАСС
N4=floor((2020-1996)/4)+1;%Номер текущего четырёхлетия
Nt=365*(2020-1996-4*(N4-1))+31+25+1;%Номер текущих суток
tb=13*60*60 + 45*60 + 18;%момент по шкале МДВ, к которому привязаны эфемериды ГЛОНАСС, в сек
Toe = (12+3)*60*60;
Tof = (24+3)*60*60;
Ts = 1;
ti = Toe:Ts:Tof;
X = -11998338.38; %% м
Y = 2268666.50; %% м
Z = 22399278.81; %% м
VX = -2196.28239; %% м/с
VY = -2144.76013; %% м/с
VZ = -961.57646; %% м/с
AX = -0.0000056; %% м/с^2
AY = 0.0000009; %% м/с^2
AZ = -0.0000019; %% м/с^2
%% Константы
ae = 6378136; 
omegaz = 7.2921151467;
%% Расчёт текущей юлианской даты
JD0 = 1461*(N4 - 1) + Nt + 245008.5 - (Nt -3)/25;
%% Номер юлианского дня для текущей даты
JDN = JD0 + 0.5;
%% Среднее звёздное время по Гринвичу
T_delta = (JD0 - 2451545)/36525;
ERA = 2*pi*(0.7790572732640 + 1.00273781191135448*(JD0 - 2451545));
GMST = ERA + 0.0000000703270726 + 0.0223603658710194*T_delta + 0.0000067465784654*T_delta^2 - 0.0000000000021332*T_delta^3 - 0.0000000001452308*T_delta^4 - 0.0000000000001784*T_delta^5;
%% Перевод в п/у инерциальную геоцентрическую систему 
S = GMST + omegaz*(tb -10800);
Xate=X*cos(S)-Y*sin(S);
Yate=X*sin(S)+Y*cos(S);
Zate=Z;

Vxate=VX*cos(S)-VY*sin(S)-omega_z*Yate;
Vyate=VX*sin(S)+VY*cos(S)+omega_z*Xate;
Vzate=vzte;

Axte=AX*cos(S)-AY*sin(S);
Ayte=AX*sin(S)+AY*cos(S);
Azte=AZ;
%% Метод Рунге-Кутты
%% Начальные условия 
res0 = [x0 y0 z0 VX0 VY0 VZ0];
[t, res] = ode45('diffs', tb:-Ts:ti(1), res0);
res1 = res(end:-1:2,:);
t1 = t(end:-1:2,:);
[t, res] = ode45('diffs', tb:Ts:ti(end), res0);
res1 = [res1, res];
t1 = [t1,t];
%% Учёт ускорений
tau1 = t1 - tb;
AXTE = AX*(tau1.^2)/2;
AYTE = AY*(tau1.^2)/2;
AZTE = AZ*(tau1.^2)/2;

delta_VX = AX*tau1;
delta_VY = AY*tau1;
delta_VZ = AZ*tau1;

delta_A = [AXTE AYTE AZTE delta_VX delta_VY delta_VZ];

res1 = res1 + delta_A;
%% Пересчёт координат в ПЗ-90
S = GMST + omegaz*(t1 - 10800);
x_pz90( = res1(:,1).*cos(S) + res1(:,1).*sin(S);
y_pz90 = -res1(:,1).*sin(S) + res1(:,1).*cos(S);
z_pz90 = res1(:,1);
%% Переход к сферическим координатам
r = sqrt(res1(:,1).^2 + res1(:,1).^2 + res1(:,1).^2);
teta = acos(z/r);
phi = atan2(y, x);
polarplot(phi,teta*180/pi, 'r')
ax = polaraxes;
polarplot(ax,pi,teta*180/pi, 'r')
